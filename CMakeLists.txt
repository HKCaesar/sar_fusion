cmake_minimum_required(VERSION 3.3)
project(sar_fusion)
set(CMAKE_AUTOMOC ON)
set(CMAKE_AUTOUIC ON)
set(CMAKE_INCLUDE_CURRENT_DIR ON)
set(CMAKE_PREFIX_PATH "/home/auroua/software/Qt5.6.0/5.6/gcc_64/")
find_package(Qt5Widgets REQUIRED)
#set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${Qt5Widgets_EXECUTABLE_COMPILE_FLAGS}")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
FIND_PACKAGE(OTB)
IF(OTB_FOUND)
    INCLUDE(${OTB_USE_FILE})
ELSE(OTB_FOUND)
    MESSAGE(FATAL_ERROR
            "Cannot build OTB project without OTB. Please set OTB_DIR.")
ENDIF(OTB_FOUND)


#set(SOURCE_FILES main.cpp mainwindow.cpp Histogram1D.cpp Histogram1D.h)
#set(SOURCE_FILES main.cpp Histogram1D.cpp Histogram1D.h)
#set(SOURCE_FILES otb_helloworld.cpp)
#set(SOURCE_FILES otb_pipline.cpp)
#set(SOURCE_FILES otb_filteringPipleline.cpp)
set(SOURCE_FILES opencv_TouziEdgeDetector.cpp)
#set(SOURCE_FILES vector_point_test.cpp)
#set(SOURCE_FILES graph_merge.cpp)
#set(SOURCE_FILES recursion_test.cpp)
#set(SOURCE_FILES region_growing.cpp)
#set(SOURCE_FILES read_resize.cpp)
#set(SOURCE_FILES otb_TouziEdgeDetectorExample.cpp)
#set(SOURCE_FILES otbTouziEdgeDetectorImageFilter2.txx)


add_subdirectory(mstar)
include_directories(/usr/local)
include_directories(/usr/local/include)
include_directories(/usr/local/include/opencv)
include_directories(/usr/local/include/opencv2)
add_executable(sar_fusion ${SOURCE_FILES})
target_link_libraries(${CMAKE_PROJECT_NAME} mstarjpg)
target_link_libraries(${CMAKE_PROJECT_NAME} Qt5::Widgets)
target_link_libraries(${CMAKE_PROJECT_NAME} /usr/local/lib/libopencv_core.so)
target_link_libraries(${CMAKE_PROJECT_NAME} /usr/local/lib/libopencv_imgproc.so)
target_link_libraries(${CMAKE_PROJECT_NAME} /usr/local/lib/libopencv_highgui.so)
target_link_libraries(${CMAKE_PROJECT_NAME} /usr/local/lib/libopencv_ml.so)
target_link_libraries(${CMAKE_PROJECT_NAME} /usr/local/lib/libopencv_features2d.so)
target_link_libraries(${CMAKE_PROJECT_NAME} /usr/local/lib/libopencv_xfeatures2d.so)
target_link_libraries(${CMAKE_PROJECT_NAME} /usr/local/lib/libopencv_imgcodecs.so)
target_link_libraries(${CMAKE_PROJECT_NAME} /usr/lib/x86_64-linux-gnu/libjpeg.so)
TARGET_LINK_LIBRARIES(${CMAKE_PROJECT_NAME} ${OTB_LIBRARIES})
